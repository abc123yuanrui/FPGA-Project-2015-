module keylogic( //按键显示处理子模块
        input wire clk, //时钟25/cnt[16]
        input wire [4:0] keycode, //按键编码
        input key_ready,
        input change_lemp,//改密状态
        input change_lemp1,//判断改密状态
        input flag_b ,//开锁是否成功状态
        output  [3:0]segData_1,
		output  [3:0]segData_2,
		output  [3:0]segData_3,
		output  [3:0]segData_4//从左到右带显示数值
        );
        reg [3:0]segData_r1;
		reg [3:0]segData_r2;
		reg [3:0]segData_r3;
		reg [3:0]segData_r4;
        reg [15:0] lednum;//带显示的4位数值
        reg keypressdone = 1'b1; //按键已处理标志，1表示已处理，0表示未处理
        reg [4:0] keycode1 = 5'h10; //上一次检测到的按键值，用于消抖
        always @ (negedge  key_ready ) 
        begin
            if(keycode<10)//只对0-9处理
            begin
				if(flag_b==0)//未开锁，显示点
				begin
                  lednum = lednum << 4; //数码管前3位显示前3次按键值 
                  lednum[3:0] = 10; //数码管第4位显示当前按键值    
				end 
				else if(flag_b==1&&change_lemp1==0)//开锁成功，改密状态
				begin
				  lednum = lednum << 4; //数码管前3位显示前3次按键值 
                  lednum[3:0] = keycode[3:0]; //数码管第4位显示当前按键值    
				end
				else if(flag_b==1&&change_lemp==0)//判断改密是否正确，显示c
				begin
				  lednum = lednum << 4; //数码管前3位显示前3次按键值 
				  lednum[3:0] = 11; //数码管第4位显示当前按键值    
			    end
			 end
       end
        always@ (posedge clk) //键值传递
		begin
		   segData_r1<=lednum[3:0];
           segData_r2<=lednum[7:4];
           segData_r3<=lednum[11:8];
           segData_r4<=lednum[15:12];
		end
        
         assign segData_1[3:0]=segData_r1;
         assign segData_2[3:0]=segData_r2;
         assign segData_3[3:0]=segData_r3;
         assign segData_4[3:0]=segData_r4;
 
endmodule